#include<bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define clr(x) x.clear()

#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif

const int MOD=1e9+7;

typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
typedef long long LL;

int read_int()
{
    char c = gc();
    while(c<'0' || c>'9') c = gc();
    int ret = 0;
    while(c>='0' && c<='9')
    {
        ret = 10 * ret + c - 48;
        c = gc();
    }
    return ret;
}
LL inversions(LL *arr,int low,int high)
{
    if(low== high)
        return 0;

    if (low+1==high)
    {
        if(arr[low]<arr[high])
            return 0;
        else
        {
            LL t=arr[low];
            arr[low]=arr[high];
            arr[high]=t;
            return 1;
        }
    }
        int mid=low+(high-low)/2+1;

        int inversions_in_left_subarr=inversions(arr,low,mid-1);
        int inversions_in_right_subarr=inversions(arr,mid,high);

        int i=low,j=mid,k=0;

        LL aux_arr[high-low+1],inver=0;

        while(i<mid&&j<=high)
        {
            if(arr[i]<arr[j])
                aux_arr[k++]=arr[i++];
            else
            {
                aux_arr[k++]=arr[j++];
                inver+=mid-i;
            }
        }

        while(i<mid)
            aux_arr[k++]=arr[i++];
        while(j<=high)
            aux_arr[k++]=arr[j++];
        k=0;
        i=low;
        while(i<=high)
            arr[i++]=aux_arr[k++];
        cout<<inver<<"\n";
        return inver+inversions_in_left_subarr+inversions_in_right_subarr;

}
int main()
{
    freopen("input.txt","r",stdin);
    int h,i=0,k;
    cin>>h;
    k=h;
    LL arr[h];//={ 1,2,3,4,5,6 };
    while(h--)
    {
        cin>>arr[i++];
    }

    cout<<inversions(arr,0,k-1)<<"\n";

    return 0;
}
